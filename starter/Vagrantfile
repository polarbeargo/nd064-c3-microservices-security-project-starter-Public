# mainatiner: nick.reva@snap.com
ENV["TERM"]="linux"

Vagrant.configure("2") do |config|
#test for Yi!
  # set up root access
  config.ssh.username = 'root'
  config.ssh.password = 'vagrant'
  config.ssh.insert_key = 'true'
    
  NodeCount = 1

  # configure Kubernetes Nodes
  (1..NodeCount).each do |i|
    config.vm.define "node#{i}" do |node|
      # set base image for the vagrant box
      config.vm.box = "opensuse/Leap-15.2.x86_64"

      # set the static IP for the vagrant box
      node.vm.network "private_network", ip: "192.168.50.10#{i}"
      # configure the parameters for VirtualBox provider
      node.vm.provider "virtualbox" do |v|
        v.name = "node#{i}"
        v.memory = 2048
        v.cpus = 2
      end

    config.vm.provision "shell", inline: <<-SHELL
      # install Docker
      zypper --non-interactive install docker #python3-docker-compose
      systemctl enable docker
      usermod -G docker -a $USER
      systemctl restart docker
      echo "******** Step 1: Installing dependencies ********"
      sudo zypper refresh
      sudo zypper --non-interactive install bzip2
      sudo zypper --non-interactive install etcd
      sudo zypper --non-interactive install lsof
      sudo zypper --non-interactive install htop
      sudo zypper --non-interactive install net-tools
      sudo zypper --non-interactive install wget
      sudo zypper --non-interactive install apparmor-parser
      sudo zypper --non-interactive install k9s
      sudo zypper --non-interactive install bind-utils
      sudo zypper -n install kernel-default-devel 
      echo -e "******** Begin installing k3s ********\n"
      curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644
      mkdir -p /home/vagrant/.kube
      /usr/local/bin/kubectl config view --raw >/home/vagrant/.kube/config
      echo -e "******** End installing k3s ********\n\n"
      echo -e "******** Step 2: Setting up Observability ********\n\n"
      echo -e "******** Begin installing Helm ********\n"
      export PATH=$PATH:/usr/loca/bin
      curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      chmod 700 get_helm.sh
      ./get_helm.sh
      echo -e "******** End installing Helm ********\n\n"
      echo -e "******** Begin installing Grafana and Prometheus ********\n"
      /usr/local/bin/kubectl create namespace monitoring
      /usr/local/bin/helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      /usr/local/bin/helm repo add stable https://charts.helm.sh/stable
      /usr/local/bin/helm repo add falcosecurity https://falcosecurity.github.io/charts
      /usr/local/bin/helm repo update
      /usr/local/bin/helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --kubeconfig /etc/rancher/k3s/k3s.yaml
      echo -e "******** End installing Grafana and Prometheus ********\n\n"
      echo -e "******** Verify helm is installed ********"
      /usr/local/bin/helm ls --kubeconfig /etc/rancher/k3s/k3s.yaml --namespace=monitoring
      echo -e "******** Verify prometheus is installed ********"
      /usr/local/bin/kubectl get pods --namespace=monitoring
      echo -e "******** Begin installing Falco ********\n"
      rpm --import https://falco.org/repo/falcosecurity-3672BA8F.asc
      curl -s -o /etc/zypp/repos.d/falcosecurity.repo https://falco.org/repo/falcosecurity-rpm.repo
      /usr/local/bin/helm install --kubeconfig kube_config_cluster.yml falco falcosecurity/falco \
      --set falco.grpc.enabled=true --set falco.grpcOutput.enabled=true \
      echo -e "******** End installing Falco ********\n\n"
      echo -e "******** Verify Falco is installed ********"
      /usr/local/bin/kubectl --kubeconfig kube_config_cluster.yml get pod
      /usr/local/bin/kubectl --kubeconfig kube_config_cluster.yml get ds
      /usr/local/bin/kubectl --kubeconfig kube_config_cluster.yml get ds falco -o yaml | grep serviceAcc
    SHELL
    end
  end
end
